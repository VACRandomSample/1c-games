
&НаКлиенте
Процедура НоваяИгра(Команда)
	
	Если Вопрос("Начать новую игру?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		СоздатьНовуюИгру();
	КонецЕсли;
	
КонецПроцедуры //НоваяИгра()

&НаСервере
Процедура СоздатьНовуюИгру()
	
	НомерКнопки = 0;
	НомерСтроки = 0;
	ПоследнееЧисло = 0;
	СписокВыделенныхКнопок.Очистить();
	ХодИгры.Очистить();
	
	СписокСтрок = Новый СписокЗначений;
	Для Каждого Элемент Из Элементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы") И СтрЧислоВхождений(Элемент.Имя, "Строка") > 0 Тогда
			СписокСтрок.Добавить(Элемент.Имя);
		КонецЕсли;
	КонецЦикла;
	Для Каждого ТекСтрока Из СписокСтрок Цикл
		УдалитьСтроку(ТекСтрока.Значение);
	КонецЦикла;
	
	Пока ПоследнееЧисло < 19 Цикл
		
		ПоследнееЧисло = ПоследнееЧисло + 1;
		
		//Цифры 10 быть не должно
		Если ПоследнееЧисло = 10 Тогда
			ПоследнееЧисло = ПоследнееЧисло + 1;
		КонецЕсли;
		
		//Разложение на разряды
		Если ПоследнееЧисло < 10 Тогда //Один разряд
			СоздатьКнопку(ПоследнееЧисло);
		Иначе //Два разряда
			ПервыйРазряд = Цел(ПоследнееЧисло / 10);
			СоздатьКнопку(ПервыйРазряд);
			ВторойРазряд = ПоследнееЧисло - ПервыйРазряд * 10;
			СоздатьКнопку(ВторойРазряд);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //СоздатьНовуюИгру()

&НаСервере
Функция СоздатьСтроку()
	
	НомерСтроки	= НомерСтроки + 1;
	ИмяСтроки	= "Строка" + НомерСтроки;
	Элементы.Добавить(ИмяСтроки, Тип("ГруппаФормы"));
	
	ТекущаяСтрока = Элементы[ИмяСтроки];
	ТекущаяСтрока.Вид					= ВидГруппыФормы.ОбычнаяГруппа;
	ТекущаяСтрока.Отображение			= ОтображениеОбычнойГруппы.Нет;
	ТекущаяСтрока.Группировка			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ТекущаяСтрока.ОтображатьЗаголовок	= Ложь;
	
	Заголовок = "Всего строк " + НомерСтроки;
	
	Возврат ТекущаяСтрока;
	
КонецФункции //СоздатьСтроку()

&НаСервере
Процедура ВставитьСтроку(ИмяСтроки)
	
	Для Сч = 1 По 1000 Цикл
		СледующаяСтрока = Элементы.Найти("Строка" + (Число(СтрЗаменить(ИмяСтроки, "Строка", "")) + Сч));
		Если СледующаяСтрока <> Неопределено Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.Вставить(ИмяСтроки, Тип("ГруппаФормы"), , СледующаяСтрока);
	
	ТекущаяСтрока = Элементы[ИмяСтроки];
	ТекущаяСтрока.Вид					= ВидГруппыФормы.ОбычнаяГруппа;
	ТекущаяСтрока.Отображение			= ОтображениеОбычнойГруппы.Нет;
	ТекущаяСтрока.Группировка			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ТекущаяСтрока.ОтображатьЗаголовок	= Ложь;
	
	Для Сч = 1 По 9 Цикл
		Элементы.Добавить(ИмяСтроки + "_УдаленнаяКнопка" + Сч, Тип("КнопкаФормы"), ТекущаяСтрока);
		ТекущаяКнопка = Элементы[ИмяСтроки + "_УдаленнаяКнопка" + Сч];
		ТекущаяКнопка.Доступность	= Ложь;
		ТекущаяКнопка.ИмяКоманды	= "НажатиеНаКнопку";
	КонецЦикла;
	
КонецПроцедуры //ВставитьСтроку()

&НаСервере
Процедура УдалитьСтроку(ИмяСтроки, ПроверятьАктинвыеКнопки = Ложь)
	
	//Удаление строки
	Если Не ПроверятьАктинвыеКнопки Тогда
		Элементы.Удалить(Элементы[ИмяСтроки]);
	Иначе
		Если ПолучитьКоличествоКнопокВСтроке(ИмяСтроки) = 9 И ПолучитьКоличествоКнопокВСтроке(ИмяСтроки, Истина) = 0 Тогда
			Элементы.Удалить(Элементы[ИмяСтроки]);
		КонецЕсли;
	КонецЕсли;
	
	//Проверка, есть ли ещё строки
	Победа = Истина;
	Для Каждого Элемент Из Элементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы") И СтрЧислоВхождений(Элемент.Имя, "Строка") > 0 И ПолучитьКоличествоКнопокВСтроке(Элемент.Имя, Истина) <> 0 Тогда
			Победа = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры //УдалитьСтроку()

&НаКлиенте
Функция СтрокиРядом(Строка1, Строка2)
	 
	СписокСтрок1 = Новый СписокЗначений;
	СписокСтрок2 = Новый СписокЗначений;
	ДобавлятьСтроки = Ложь;
	
	Для Каждого Элемент Из Элементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы") И СтрЧислоВхождений(Элемент.Имя, "Строка") > 0 Тогда
			СписокСтрок1.Добавить(Элемент, Формат(Число(СтрЗаменить(Элемент.Имя, "Строка", "")), "ЧЦ=10; ЧВН="));
		КонецЕсли;
	КонецЦикла;
	
	СписокСтрок1.СортироватьПоПредставлению();
	
	Для Каждого Элемент Из СписокСтрок1 Цикл
		Если Элемент.Значение = Строка1 Или Элемент.Значение = Строка2 Тогда
			Если ДобавлятьСтроки Тогда
				СписокСтрок2.Добавить(Элемент.Значение);
			КонецЕсли;
			ДобавлятьСтроки = Не ДобавлятьСтроки;
		КонецЕсли;
		Если ДобавлятьСтроки Тогда
			СписокСтрок2.Добавить(Элемент.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокСтрок2.Количество() = 2;
	 
КонецФункции //СтрокиРядом()

&НаКлиенте
Функция КнопкиРядом(Кнопка1, Кнопка2)
	 
	НомерКнопки1 = ПолучитьНомерКнопкиВСтроке(Кнопка1);
	НомерКнопки2 = ПолучитьНомерКнопкиВСтроке(Кнопка2);
	НомерСтроки1 = Число(СтрЗаменить(Кнопка1.Родитель.Имя, "Строка", ""));
	НомерСтроки2 = Число(СтрЗаменить(Кнопка2.Родитель.Имя, "Строка", ""));
	
	Если Кнопка1.Родитель = Кнопка2.Родитель Тогда
		Если КнопкиНаОднойГоризонтали(Кнопка1, Кнопка2) Тогда
			Возврат Истина;
		КонецЕсли;
	ИначеЕсли СтрокиРядом(Кнопка1.Родитель, Кнопка2.Родитель) Тогда
		Если НомерКнопки1 = НомерКнопки2 Тогда
			Возврат Истина;
		ИначеЕсли (ПолучитьКоличествоКнопокВСтроке(Кнопка1.Родитель.Имя, Истина) = ПолучитьНомерКнопкиВСтроке(Кнопка1, Истина)) И (ПолучитьНомерКнопкиВСтроке(Кнопка2, Истина) = 1) Тогда
			Возврат Истина;
		КонецЕсли;
	ИначеЕсли НомерКнопки1 = НомерКнопки2 И КнопкиНаОднойВертикали(Кнопка1, Кнопка2, НомерКнопки1) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	 
КонецФункции //КнопкиРядом()

&НаКлиенте
Функция КнопкиНаОднойГоризонтали(Кнопка1, Кнопка2)
	
	Проверять = Ложь;
	ПроверкаПройдена = Истина;
	
	Для Каждого Элемент Из Кнопка1.Родитель.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("КнопкаФормы") И СтрЧислоВхождений(Элемент.Имя, "Кнопка") > 0 Тогда
			Если Элемент = Кнопка2 Тогда
				Прервать;
			КонецЕсли;
			Если Проверять Тогда
				Если Элемент.Доступность Тогда
					ПроверкаПройдена = Ложь;
					Прервать;
				КонецЕсли;
			КонецЕсли;
			Если Элемент = Кнопка1 Тогда
				Проверять = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПроверкаПройдена;
	
КонецФункции //КнопкиНаОднойГоризонтали()

&НаКлиенте
Функция КнопкиНаОднойВертикали(Кнопка1, Кнопка2, ПозицияКнопки)
	
	Проверять = Ложь;
	ПроверкаПройдена = Истина;
	
	Для Каждого Элемент Из Элементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы") И СтрЧислоВхождений(Элемент.Имя, "Строка") > 0 Тогда
			Если Элемент = Кнопка2.Родитель Тогда
				Прервать;
			КонецЕсли;
			Если Проверять Тогда
				Если Элемент.ПодчиненныеЭлементы[ПозицияКнопки-1].Доступность Тогда
					ПроверкаПройдена = Ложь;
					Прервать;
				КонецЕсли;
			КонецЕсли;
			Если Элемент = Кнопка1.Родитель Тогда
				Проверять = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПроверкаПройдена;
	
КонецФункции //КнопкиНаОднойВертикали()

&НаСервере
Функция ПолучитьКоличествоКнопокВСтроке(ИмяСтроки, ТолькоАктивныеКнопки = Ложь)
	
	ЧислоКнопок = 0;
	
	Для Каждого Элемент Из Элементы[ИмяСтроки].ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("КнопкаФормы") И СтрЧислоВхождений(Элемент.Имя, "Кнопка") > 0 Тогда
			Если ТолькоАктивныеКнопки Тогда
				Если Элемент.Доступность Тогда
					ЧислоКнопок = ЧислоКнопок + 1;
				КонецЕсли;
			Иначе
				ЧислоКнопок = ЧислоКнопок + 1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЧислоКнопок;
	
КонецФункции //ПолучитьКоличествоКнопокВСтроке()

&НаКлиенте
Функция ПолучитьНомерКнопкиВСтроке(ТекущаяКнопка, ТолькоАктивныеКнопки = Ложь)
	
	ЧислоКнопок = 0;
	
	Для Каждого Элемент Из ТекущаяКнопка.Родитель.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("КнопкаФормы") И СтрЧислоВхождений(Элемент.Имя, "Кнопка") > 0 Тогда
			Если ТолькоАктивныеКнопки Тогда
				Если Элемент.Доступность Тогда
					ЧислоКнопок = ЧислоКнопок + 1;
				КонецЕсли;
			Иначе
				ЧислоКнопок = ЧислоКнопок + 1;
			КонецЕсли;
			Если Элемент = ТекущаяКнопка Тогда
				Возврат ЧислоКнопок;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат 0;
	
КонецФункции //ПолучитьНомерКнопкиВСтроке()

&НаСервере
Процедура СоздатьКнопку(Заголовок)
	
	СписокНомеровСтрок = Новый СписокЗначений;
	
	Для Каждого Элемент Из Элементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы") И СтрЧислоВхождений(Элемент.Имя, "Строка") > 0 Тогда
			Попытка
				СписокНомеровСтрок.Добавить(Число(СтрЗаменить(Элемент.Имя, "Строка", "")));
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
	Если СписокНомеровСтрок.Количество() > 0 Тогда
		СписокНомеровСтрок.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
		ТекущаяСтрока = Элементы["Строка" + СписокНомеровСтрок[0].Значение];
		Если ПолучитьКоличествоКнопокВСтроке(ТекущаяСтрока.Имя) > 8 Тогда
			ТекущаяСтрока = СоздатьСтроку();
		КонецЕсли;
	Иначе
		ТекущаяСтрока = СоздатьСтроку();
	КонецЕсли;
	
	НомерКнопки = НомерКнопки + 1;
	ИмяКнопки = "Кнопка" + НомерКнопки;
	Элементы.Добавить(ИмяКнопки, Тип("КнопкаФормы"), ТекущаяСтрока);
	ТекущаяКнопка = Элементы[ИмяКнопки];
	ТекущаяКнопка.Заголовок		= Заголовок;
	ТекущаяКнопка.ИмяКоманды	= "НажатиеНаКнопку";
	
КонецПроцедуры //СоздатьКнопку()

&НаСервере
Процедура ЗаменитьКнопку(ТекущееИмя, НовоеИмя, Родитель, НомерКнопкиОграничителя)
	
	КнопкаОграничитель = Неопределено;
	ЧислоКнопок = 0;
	
	Для Каждого Элемент Из Элементы[Родитель].ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("КнопкаФормы") И СтрЧислоВхождений(Элемент.Имя, "Кнопка") > 0 Тогда
			ЧислоКнопок = ЧислоКнопок + 1;
			Если ЧислоКнопок = НомерКнопкиОграничителя Тогда
				КнопкаОграничитель = Элемент;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.Удалить(Элементы[ТекущееИмя]);
	Элементы.Вставить(НовоеИмя, Тип("КнопкаФормы"), Элементы[Родитель], КнопкаОграничитель);
	Элементы[НовоеИмя].ИмяКоманды = "НажатиеНаКнопку";
	
КонецПроцедуры //ЗаменитьКнопку()

&НаСервере
Процедура ОбесцветитьКнопку(ИмяКнопки)
	
	Кнопка = Элементы[ИмяКнопки];
	Кнопка.Заголовок	= "";
	Кнопка.ЦветФона		= Новый Цвет;
	Кнопка.Доступность	= Ложь;
	
КонецПроцедуры //ОбесцветитьКнопку()

&НаСервере
Процедура УдалитьКнопку(ИмяКнопки)
	
	Элементы.Удалить(Элементы[ИмяКнопки]);
	
КонецПроцедуры //УдалитьКнопку()

&НаКлиенте
Процедура ЗавершитьХод(Команда)
	
	ЗавершитьТекущийХод();
	
КонецПроцедуры //ЗавершитьХод()

&НаСервере
Процедура ЗавершитьТекущийХод()
	
	СписокВыделенныхКнопок.Очистить();
	СписокКнопок = Новый СписокЗначений;
	СтарыйНомерСтроки = НомерСтроки;
	
	Для Каждого Строка Из Элементы Цикл
		Если ТипЗнч(Строка) = Тип("ГруппаФормы") И СтрЧислоВхождений(Строка.Имя, "Строка") > 0 Тогда
			Для Каждого Кнопка Из Строка.ПодчиненныеЭлементы Цикл
				Если ТипЗнч(Кнопка) = Тип("КнопкаФормы") И СтрЧислоВхождений(Кнопка.Имя, "Кнопка") > 0 И Кнопка.Доступность Тогда
					СписокКнопок.Добавить(Кнопка.Заголовок);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ТекущийХод = ХодИгры.Добавить(); //Запись истории хода игры
	ТекущийХод.УдалениеКнопок = Ложь;//Запись истории хода игры
	Для Каждого ЗаголовокКнопки Из СписокКнопок Цикл
		СоздатьКнопку(ЗаголовокКнопки);
		//Запись истории хода игры
		ТекущаяКнопка = Элементы["Кнопка" + НомерКнопки];
		КнопкаТекущегоХода = ТекущийХод.ПереченьКнопок.Добавить();
		КнопкаТекущегоХода.ИмяКнопки		= ТекущаяКнопка.Имя;
		КнопкаТекущегоХода.Заголовок		= ТекущаяКнопка.Заголовок;
		КнопкаТекущегоХода.Строка			= ТекущаяКнопка.Родитель.Имя;
		КнопкаТекущегоХода.ПоложениеВСтроке	= 0;
	КонецЦикла;
	
КонецПроцедуры //ЗавершитьТекущийХод()

&НаКлиенте
Процедура НажатиеНаКнопку(Команда)
	
	Если ТипЗнч(ТекущийЭлемент) <> Тип("КнопкаФормы") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущийЭлемент.ЦветФона = ЦветВыделеннойКнопки Тогда
		ТекущийЭлемент.ЦветФона = Новый Цвет;
		СписокВыделенныхКнопок.Удалить(СписокВыделенныхКнопок.НайтиПоЗначению(ТекущийЭлемент.Имя));
	Иначе
		ТекущийЭлемент.ЦветФона = ЦветВыделеннойКнопки;
		СписокВыделенныхКнопок.Добавить(ТекущийЭлемент.Имя, Формат(Число(СтрЗаменить(ТекущийЭлемент.Имя, "Кнопка", "")), "ЧЦ=10; ЧВН="));
		ПроверитьСписокВыделенныхКнопок();
	КонецЕсли;
	
КонецПроцедуры //НажатиеНаКнопку()

&НаКлиенте
Процедура ПроверитьСписокВыделенныхКнопок()
	
	//Сортировка по наименованию кнопок
	СписокВыделенныхКнопок.СортироватьПоПредставлению();
	
	//Проверка на лишние элементы
	Для Каждого ЭлементСписка Из СписокВыделенныхКнопок Цикл
		Если СтрЧислоВхождений(ЭлементСписка.Значение, "Кнопка") < 1 Тогда
			СписокВыделенныхКнопок.Удалить(ЭлементСписка);
		КонецЕсли;
	КонецЦикла;
	
	//Проверка на количество кнопок
	Если СписокВыделенныхКнопок.Количество() < 2 Тогда
		Возврат;
	КонецЕсли;
	
	Кнопка1 = Элементы[СписокВыделенныхКнопок[0].Значение];
	Кнопка2 = Элементы[СписокВыделенныхКнопок[1].Значение];
	
	//Проверка на расположение кнопок относительно друг друга
	Если НЕ КнопкиРядом(Кнопка1, Кнопка2) Тогда
		Кнопка1.ЦветФона = Новый Цвет;
		Кнопка2.ЦветФона = Новый Цвет;
		СписокВыделенныхКнопок.Очистить();
		Возврат;
	КонецЕсли;
	
	//Проверка на правильность выбора
	Попытка
		ЗначениеКнопки1 = Число(Кнопка1.Заголовок);
		ЗначениеКнопки2 = Число(Кнопка2.Заголовок);
		Если ЗначениеКнопки1 = ЗначениеКнопки2 Или ЗначениеКнопки1 + ЗначениеКнопки2 = 10 Тогда
			//Запись истории хода игры
			ТекущийХод = ХодИгры.Добавить();
			ТекущийХод.УдалениеКнопок = Истина;
			КнопкаТекущегоХода = ТекущийХод.ПереченьКнопок.Добавить();
			КнопкаТекущегоХода.ИмяКнопки		= Кнопка1.Имя;
			КнопкаТекущегоХода.Заголовок		= Кнопка1.Заголовок;
			КнопкаТекущегоХода.Строка			= Кнопка1.Родитель.Имя;
			КнопкаТекущегоХода.ПоложениеВСтроке	= ПолучитьНомерКнопкиВСтроке(Кнопка1);
			КнопкаТекущегоХода = ТекущийХод.ПереченьКнопок.Добавить();
			КнопкаТекущегоХода.ИмяКнопки		= Кнопка2.Имя;
			КнопкаТекущегоХода.Заголовок		= Кнопка2.Заголовок;
			КнопкаТекущегоХода.Строка			= Кнопка2.Родитель.Имя;
			КнопкаТекущегоХода.ПоложениеВСтроке	= ПолучитьНомерКнопкиВСтроке(Кнопка2);
			//Обесцвечивание кнопок
			ОбесцветитьКнопку(Кнопка1.Имя);
			ОбесцветитьКнопку(Кнопка2.Имя);
			СписокВыделенныхКнопок.Очистить();
			//Удаление строк, если нужно
			Строка1 = Кнопка1.Родитель.Имя;
			Строка2 = Кнопка2.Родитель.Имя;
			Кнопка1 = Неопределено;
			Кнопка2 = Неопределено;
			УдалитьСтроку(Строка1, Истина);
			Если Строка1 <> Строка2 Тогда
				УдалитьСтроку(Строка2, Истина);
			КонецЕсли;
		Иначе
			Кнопка1.ЦветФона = Новый Цвет;
			Кнопка2.ЦветФона = Новый Цвет;
			СписокВыделенныхКнопок.Очистить();
		КонецЕсли;
	Исключение
		Предупреждение("Ошибка сравнения значений");
	КонецПопытки;
	
	Если Победа Тогда
		Предупреждение("Поздравляем!!! Вы супер-пупер!!!");
	КонецЕсли;
	
КонецПроцедуры //ПроверитьСписокВыделенныхКнопок()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЦветВыделеннойКнопки = Новый Цвет(205, 170, 255);
	СоздатьНовуюИгру();
	
КонецПроцедуры //ПриОткрытии()

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Отказ = Вопрос("Вы действительно хотите выйти из игры?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да;
	
КонецПроцедуры //ПередЗакрытием()

&НаКлиенте
Процедура ПосмотретьХодИгры(Команда)
	
	СоздатьНовуюИгру();
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл хода игры";
	Диалог.Фильтр = "Файл хода игры (*.gl)|*.gl";
	Если Диалог.Выбрать() Тогда
		ЗагрузитьХодИгрыИзФайла(Диалог.ПолноеИмяФайла);
	Иначе
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекущийХод Из ХодИгры Цикл
		
		ОбработкаПрерыванияПользователя();
		Если ТекущийХод.УдалениеКнопок Тогда
			
			//Задержка времени
			ВремяПродолжения = ТекущаяДата() + 1;
			Пока ТекущаяДата() < ВремяПродолжения Цикл
			КонецЦикла;
			
			//Подсветим кнопки
			Для Каждого СтрокаПеречняКнопок Из ТекущийХод.ПереченьКнопок Цикл
				ОбработкаПрерыванияПользователя();
				Элементы[СтрокаПеречняКнопок.ИмяКнопки].ЦветФона = ЦветВыделеннойКнопки;
			КонецЦикла;
			
			//Задержка времени
			ВремяПродолжения = ТекущаяДата() + 1;
			Пока ТекущаяДата() < ВремяПродолжения Цикл
			КонецЦикла;
			
			//Удалим кнопки, и, если нужно, строки
			Для Каждого СтрокаПеречняКнопок Из ТекущийХод.ПереченьКнопок Цикл
				ОбработкаПрерыванияПользователя();
				ОбесцветитьКнопку(СтрокаПеречняКнопок.ИмяКнопки);
				УдалитьСтроку(СтрокаПеречняКнопок.Строка, Истина);
			КонецЦикла;
			
		Иначе
			
			Для Каждого СтрокаПеречняКнопок Из ТекущийХод.ПереченьКнопок Цикл
				СоздатьКнопку(СтрокаПеречняКнопок.Заголовок);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Предупреждение("Просмотр хода игры завершен");
	
КонецПроцедуры //ПосмотретьХодИгры()

&НаСервере
Процедура ЗагрузитьХодИгрыИзФайла(ПолноеИмяФайла)
	
	ЗначениеВРеквизитФормы(ЗначениеИзФайла(ПолноеИмяФайла), "ХодИгры");
	
КонецПроцедуры //ЗагрузитьХодИгрыИзФайла()

&НаКлиенте
Процедура СохранитьХодИгры(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Заголовок = "Укажите файл для сохранения хода игры";
	Диалог.Фильтр = "Файл хода игры (*.gl)|*.gl";
	Если Диалог.Выбрать() Тогда
		СохранитьХодИгрыВФайл(Диалог.ПолноеИмяФайла);
	КонецЕсли;
	
КонецПроцедуры //СохранитьХодИгры()

&НаСервере
Процедура СохранитьХодИгрыВФайл(ПолноеИмяФайла)
	
	ЗначениеВФайл(ПолноеИмяФайла, РеквизитФормыВЗначение("ХодИгры", Тип("ТаблицаЗначений")));
	
КонецПроцедуры //СохранитьХодИгрыВФайл()

&НаКлиенте
Процедура ОтменитьПоследнийХод(Команда)
	
	Если ХодИгры.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийХод = ХодИгры.Получить(ХодИгры.Количество() - 1);
	Если ТекущийХод.УдалениеКнопок Тогда
		Для Каждого СтрокаПеречняКнопок Из ТекущийХод.ПереченьКнопок Цикл
			ТекущаяКнопка = Элементы.Найти(СтрокаПеречняКнопок.ИмяКнопки);
			Если ТекущаяКнопка = Неопределено Тогда
				ТекущаяСтрока = Элементы.Найти(СтрокаПеречняКнопок.Строка);
				Если ТекущаяСтрока = Неопределено Тогда
					ВставитьСтроку(СтрокаПеречняКнопок.Строка);
					ТекущаяСтрока = Элементы[СтрокаПеречняКнопок.Строка];
				КонецЕсли;
				ЗаменитьКнопку(СтрокаПеречняКнопок.Строка + "_УдаленнаяКнопка" + СтрокаПеречняКнопок.ПоложениеВСтроке, СтрокаПеречняКнопок.ИмяКнопки, СтрокаПеречняКнопок.Строка, ?(СтрокаПеречняКнопок.ПоложениеВСтроке < 9, СтрокаПеречняКнопок.ПоложениеВСтроке + 1, 0));
				ТекущаяКнопка = Элементы[СтрокаПеречняКнопок.ИмяКнопки];
			КонецЕсли;
			ТекущаяКнопка.Заголовок		= СтрокаПеречняКнопок.Заголовок;
			ТекущаяКнопка.Доступность	= Истина;
		КонецЦикла;
	Иначе
		Для Сч = 1 По ТекущийХод.ПереченьКнопок.Количество() Цикл
			СтрокаПеречняКнопок = ТекущийХод.ПереченьКнопок.Получить(ТекущийХод.ПереченьКнопок.Количество() - Сч);
			УдалитьКнопку(СтрокаПеречняКнопок.ИмяКнопки);
			УдалитьСтроку(СтрокаПеречняКнопок.Строка, Истина);
		КонецЦикла;
	КонецЕсли;
	
	ХодИгры.Удалить(ТекущийХод);
	
КонецПроцедуры //ОтменитьПоследнийХод()
